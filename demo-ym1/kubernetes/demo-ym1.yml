apiVersion: v1
data:
    # 请根据规则填写：
    # {
    #   auths: {
    #     [harborUrl]: { // 镜像仓库地址
    #       userName: dockerUsername, // 镜像仓库用户名
    #       password: dockerPassword, // 镜像仓库密码
    #       email: "", // 邮箱（可以为空）
    #       auth: base64(dockerUsername:dockerPassword) // 镜像仓库用户名:镜像仓库密码base64后的值
    #     }
    #   }
    # }
    # 以上对象转为json字符串并base64后可填入下方
  .dockerconfigjson: eyJhdXRocyI6eyJoYXJib3ItYi5hbGF1ZGEuY246NjAwODAiOnsidXNlcm5hbWUiOiJhZG1pbiIsInBhc3N3b3JkIjoiMTIzIiwiZW1haWwiOiIiLCJhdXRoIjoiWVdSdGFXNDZNVEl6In19fQ==
kind: Secret
metadata:
  name: asf-registry
  namespace: default
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: asf-service
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: asf-service
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: asf-service
  namespace: default
subjects:
  - kind: ServiceAccount
    name: asf-service
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: asf-service
---
apiVersion: v1
kind: Secret
metadata:
  name: demo-ym1
  namespace: default
data:
  spring.rabbitmq.password: U09NamJhS04wYQ==
---
#请将此 ConfigMap 添加至 K8S 集群的 default 命名空间下
kind: ConfigMap
apiVersion: v1
metadata:
  name: demo-ym1
  namespace: default
data:
  application.yml: |-
    management:
        health:
          probes:
            enabled: true
        endpoints:
          web:
            exposure:
              include: "*"
    spring:
      #RabbitMQ 配置
      rabbitmq:
        #RabbitMQ 主机名
        host: 10.110.159.195
        #RabbitMQ 访问端口
        port: 5672
        #RabbitMQ 虚拟主机
        virtual-host: /
        #RabbitMQ 用户名
        username: user
        #RabbitMQ 密码从 secret/demo-service-secret 中获取
      #Spring Cloud Stream 配置
      cloud:
        stream:
          bindings:
            DEMO_QUEUE: #消息通道名称
              #消息组名称
              group: demo
              #exchange 名称，会自动创建 DEMO_QUEUE.demo 的队列
              destination: DEMO_QUEUE
              #消息数据内容类型
              content-type: application/json
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-ym1
  namespace: default
  labels:
    service.asf.io/name: demo-ym1
spec:
  selector:
    matchLabels:
      service.asf.io/name: demo-ym1
  template:
    metadata:
      labels:
        service.asf.io/name: demo-ym1
    spec:
      serviceAccountName: asf-service
      imagePullSecrets:
        - name: asf-registry
      volumes:
        - name: asf-secret
          secret:
            secretName: demo-ym1
      containers:
        - image: harbor-b.alauda.cn/3rdparty/demo-ym1:latest
          imagePullPolicy: Always
          name: demo-ym1
          volumeMounts:
            - name: asf-secret
              mountPath: /etc/secrets/asf-secret
              readOnly: true
          resources:
            limits:
              cpu: '1'
              memory: 1000Mi
            requests:
              cpu: '1'
              memory: 1000Mi
          readinessProbe:
              failureThreshold: 2
              httpGet:
                path: /actuator/health/readiness
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 100
              periodSeconds: 3
              successThreshold: 1
              timeoutSeconds: 2
          livenessProbe:
              failureThreshold: 1
              httpGet:
                path: /actuator/health/liveness
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 100
              successThreshold: 1
              timeoutSeconds: 2
              periodSeconds: 8
---
apiVersion: v1
kind: Service
metadata:
  name: demo-ym1
  namespace: default
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    service.asf.io/name: demo-ym1
  type: NodePort
